name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  AWS_REGION: ap-northeast-2
  REPOSITORY: gym-service

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
    
      # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # AWS ECR login
    - name: AWS ECR login
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # AWS ECR build and push
    - name: AWS ECR build and push
      id: ecr-build
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image_tag::$IMAGE_TAG"

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: github_alarm
        SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        SLACK_MESSAGE: ${{steps.ecr-build.outputs.image_tag}}
        SLACK_TITLE: Image tag
        SLACK_USERNAME: ImageTagBot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: Send Trigger
      run: |
        curl -X POST https://api.github.com/repos/leejh-77/api-docs/dispatches \
        -H 'Accept: application/vnd.github.v3+json' \
        -u ${{ secrets.PAT }} \
        -d '{"event_type": "docs-event", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'